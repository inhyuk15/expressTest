import { Schema, SchemaObject } from './schemaBuilder';
declare type GenerateSwaggerPathArg = {
    querySchema: SchemaObject | null | undefined;
    pathSchema: SchemaObject | null | undefined;
    bodySchema: SchemaObject | null | undefined;
    returnsSchema: Schema | null | undefined;
};
export declare const generateSwaggerPath: (schemas: GenerateSwaggerPathArg) => {
    parameters: ({
        in: string;
        name: string;
        required: boolean;
        schema: any;
    } | null)[];
    responses: any;
};
declare type Method = string;
declare type EndpointPath = string;
export declare type UrlsMethodDocs = Record<EndpointPath, Record<Method, {
    pathSchema: SchemaObject | null | undefined;
    querySchema: SchemaObject | null | undefined;
    bodySchema: SchemaObject | null | undefined;
    returnsSchema: Schema | null | undefined;
}>>;
export declare const convertUrlsMethodsSchemaToSwagger: (obj: UrlsMethodDocs) => Record<string, Record<string, {
    parameters: ({
        in: string;
        name: string;
        required: boolean;
        schema: any;
    } | null)[];
    responses: any;
}>>;
export {};
